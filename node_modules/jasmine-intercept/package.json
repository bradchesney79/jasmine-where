{
  "name": "jasmine-intercept",
  "version": "0.0.2",
  "description": "intercept jasmine spec results to prevent expected failures appearing as failed in the reporter",
  "homepage": "https://github.com/dfkaye/jasmine-intercept",
  "author": {
    "name": "david kaye",
    "email": "dfkaye@yahoo.com",
    "url": "@dfkaye"
  },
  "devDependencies": {
    "jasmine-node": "~1.0.0"
  },
  "main": "./jasmine-intercept.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/dfkaye/jasmine-intercept.git"
  },
  "scripts": {
    "test": "jasmine-node --verbose ./test/suite.spec.js"
  },
  "readme": "jasmine-intercept\r\n=================\r\n\r\nProvides an `intercept()` method for the \r\n[Jasmine BDD test framework](https://github.com/pivotal/jasmine), in order to \r\ncapture *expected* failures and report them as passed to the jasmine reporter, \r\nmainly as a shield for continuous integration environments.\r\n\r\nThanks to:\r\n+ Jamon Holmgren (@jamonholmgren) for your feedback regarding this API. \r\n\r\njustify\r\n-------\r\n\r\ntl;dr ~ needed this while using jasmine to test-drive my \r\n[jasmine-where](https://github.com/dfkaye/jasmine-where) repo.\r\n\r\nRead [more about that here](https://gist.github.com/dfkaye/7223559).\r\n\r\nuse\r\n---\r\n\r\nIncluding or requiring jasmine-intercept adds an `intercept()` method to the \r\n**global** namespace.\r\n\r\n`intercept` takes a function with a body of expectations and returns a results \r\nobject containing arrays of `failing` and `passing` messages generated by the \r\nspec runner.\r\n\r\nUse `var messages = intercept(function () { \r\n  // body of spec\r\n})` \r\nto capture *expected* failures in order to prevent them appearing as failed in \r\nthe jasmine reporter.\r\n\r\nInspect the returned `messages.failing` and `messages.passing` arrays for length \r\nand content.\r\n\r\nexamples\r\n--------\r\n\r\nUse in an it-eration:\r\n\r\n    it('should intercept messages', function () {\r\n    \r\n      var messages = intercept(function() {\r\n        expect(1).toBe(1);\r\n        expect(typeof drink).toBe('mixed'); // should be 'undefined'\r\n      });\r\n      \r\n      expect(messages.failing.length).toBe(1);\r\n      expect(messages.failing[0]).toBe(\"Expected 'undefined' to be 'mixed'.\");\r\n      expect(messages.passing.length).toBe(1);\r\n    });\r\n\r\n    \r\nUse in asynchronous it-eration:  \r\n    \r\n    it('should intercept asynchronous messages', function (done) { // <= pass done here\r\n    \r\n      setTimeout(function () {\r\n      \r\n        var messages = intercept(function() {\r\n          expect(1).toBe(1);\r\n          expect(typeof drink).toBe('mixed'); // should be 'undefined'\r\n        });\r\n        \r\n        expect(messages.failing.length).toBe(1);\r\n        expect(messages.failing[0]).toBe(\"Expected 'undefined' to be 'mixed'.\");\r\n        expect(messages.passing.length).toBe(1);\r\n        \r\n        done(); // <= call done here\r\n        \r\n      }, 500);\r\n      \r\n    });\r\n    \r\n    \r\njasmine versions supported\r\n--------------------------\r\n\r\nCurrent implementation runs in both jasmine 1.3.1 and jasmine 2.0.0-rc3.\r\n\r\nUsing jasmine-node which uses jasmine 1.3.1 internally.\r\n\r\n    jasmine-node --verbose ./test/suite.spec.js\r\n    \r\nor simply\r\n\r\n    npm test\r\n    \r\nUsing [testemjs](https://github.com/airportyh/testem) to drive tests in multiple \r\nbrowsers for jasmine-2.0.0 (see how to \r\n[hack testem for jasmine 2](https://github.com/dfkaye/testem-jasmine2)), as well \r\nas jasmine-node.  The following command uses a custom launcher for jasmine-node \r\nin testem:\r\n\r\n    testem -l jasmine-node\r\n\r\nnpm\r\n---\r\n\r\n    npm install jasmine-intercept\r\n    \r\nTODO\r\n----\r\n+ <del>at least one asynchronous test</del>(done)\r\n+ <del>better names for pass/fail message arrays</del>\r\n+ <del>better usable api</del>\r\n+ <del>NPM publish</del>",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dfkaye/jasmine-intercept/issues"
  },
  "_id": "jasmine-intercept@0.0.2",
  "_from": "jasmine-intercept@"
}
